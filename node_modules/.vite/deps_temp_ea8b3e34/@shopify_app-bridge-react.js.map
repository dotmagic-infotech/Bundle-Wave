{
  "version": 3,
  "sources": ["../../@shopify/app-bridge-react/build/esm/components/Modal.js", "../../@shopify/app-bridge-react/build/esm/components/NavMenu.js", "../../@shopify/app-bridge-react/build/esm/components/TitleBar.js", "../../@shopify/app-bridge-react/build/esm/components/SaveBar.js", "../../@shopify/app-bridge-react/build/esm/hooks/useAppBridge.js"],
  "sourcesContent": ["import { forwardRef, useState, Children, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { jsxs, jsx } from 'react/jsx-runtime';\r\n\r\n/**\r\n * This component is a wrapper around the App Bridge `ui-modal` element.\r\n * It is used to display an overlay that prevents interaction with the\r\n * rest of the app until dismissed.\r\n *\r\n * @see {@link https://shopify.dev/docs/api/app-bridge-library/react-components/modal}\r\n */\r\nconst Modal = /*#__PURE__*/forwardRef(function InternalModal({\r\n  open,\r\n  onShow,\r\n  onHide,\r\n  children,\r\n  ...rest\r\n}, forwardedRef) {\r\n  const [modal, setModal] = useState();\r\n  const {\r\n    titleBar,\r\n    saveBar,\r\n    modalContent\r\n  } = Children.toArray(children).reduce((acc, node) => {\r\n    const nodeName = getNodeName(node);\r\n    const isTitleBar = nodeName === 'ui-title-bar';\r\n    const isSaveBar = nodeName === 'ui-save-bar';\r\n    const belongToModalContent = !isTitleBar && !isSaveBar;\r\n    if (belongToModalContent) {\r\n      acc.modalContent.push(node);\r\n    }\r\n    return {\r\n      ...acc,\r\n      titleBar: isTitleBar ? node : acc.titleBar,\r\n      saveBar: isSaveBar ? node : acc.saveBar\r\n    };\r\n  }, {\r\n    modalContent: []\r\n  });\r\n  const contentPortal = modal && modal.content ? /*#__PURE__*/ReactDOM.createPortal(modalContent, modal.content) : null;\r\n  useEffect(() => {\r\n    if (!modal) return;\r\n    if (open) {\r\n      modal.show();\r\n    } else {\r\n      modal.hide();\r\n    }\r\n  }, [modal, open]);\r\n  useEffect(() => {\r\n    if (!modal || !onShow) return;\r\n    modal.addEventListener('show', onShow);\r\n    return () => {\r\n      modal.removeEventListener('show', onShow);\r\n    };\r\n  }, [modal, onShow]);\r\n  useEffect(() => {\r\n    if (!modal || !onHide) return;\r\n    modal.addEventListener('hide', onHide);\r\n    return () => {\r\n      modal.removeEventListener('hide', onHide);\r\n    };\r\n  }, [modal, onHide]);\r\n  useEffect(() => {\r\n    if (!modal) return;\r\n    return () => {\r\n      modal.hide();\r\n    };\r\n  }, [modal]);\r\n  return /*#__PURE__*/jsxs(\"ui-modal\", {\r\n    ...rest,\r\n    ref: modal => {\r\n      setModal(modal);\r\n      if (forwardedRef) {\r\n        if (typeof forwardedRef === 'function') {\r\n          forwardedRef(modal);\r\n        } else {\r\n          forwardedRef.current = modal;\r\n        }\r\n      }\r\n    },\r\n    children: [titleBar, saveBar, /*#__PURE__*/jsx(\"div\", {\r\n      children: contentPortal\r\n    })]\r\n  });\r\n});\r\nModal.displayName = 'ui-modal';\r\nfunction getNodeName(node) {\r\n  if (!node) return;\r\n  const rawNodeType = typeof node === 'object' && 'type' in node ? node.type : undefined;\r\n  const nodeType = typeof rawNodeType === 'string' ? rawNodeType : undefined;\r\n  const rawDisplayName = typeof rawNodeType === 'object' ? rawNodeType.displayName : undefined;\r\n  const displayName = typeof rawDisplayName === 'string' ? rawDisplayName : undefined;\r\n  return nodeType || displayName;\r\n}\r\n\r\nexport { Modal };\r\n", "/**\r\n * This component is a wrapper around the App Bridge `ui-nav-menu` element.\r\n * It is used to create a navigation menu for your app.\r\n *\r\n * @see {@link https://shopify.dev/docs/api/app-bridge-library/react-components/navmenu}\r\n */\r\nconst NavMenu = 'ui-nav-menu';\r\n\r\nexport { NavMenu };\r\n", "/**\r\n * This component is a wrapper around the App Bridge `ui-title-bar` element.\r\n * It is used to to populate the app title bar with button actions or the\r\n * modal header and footer when used within the Modal component.\r\n *\r\n * @see {@link https://shopify.dev/docs/api/app-bridge-library/react-components/titlebar}\r\n */\r\nconst TitleBar = 'ui-title-bar';\r\n\r\nexport { TitleBar };\r\n", "import { forwardRef, useState, useEffect } from 'react';\r\nimport { jsx } from 'react/jsx-runtime';\r\n\r\n/**\r\n * This component is a wrapper around the App Bridge `ui-save-bar` element.\r\n * It is used to display a contextual save bar to signal dirty state in the app.\r\n *\r\n * @see {@link https://shopify.dev/docs/api/app-bridge-library/react-components/save-bar}\r\n */\r\nconst SaveBar = /*#__PURE__*/forwardRef(function InternalSaveBar({\r\n  open,\r\n  onShow,\r\n  onHide,\r\n  children,\r\n  ...rest\r\n}, forwardedRef) {\r\n  const [saveBar, setSaveBar] = useState();\r\n  useEffect(() => {\r\n    if (!saveBar) return;\r\n    if (open) {\r\n      saveBar.show();\r\n    } else {\r\n      saveBar.hide();\r\n    }\r\n  }, [saveBar, open]);\r\n  useEffect(() => {\r\n    if (!saveBar || !onShow) return;\r\n    saveBar.addEventListener('show', onShow);\r\n    return () => {\r\n      saveBar.removeEventListener('show', onShow);\r\n    };\r\n  }, [saveBar, onShow]);\r\n  useEffect(() => {\r\n    if (!saveBar || !onHide) return;\r\n    saveBar.addEventListener('hide', onHide);\r\n    return () => {\r\n      saveBar.removeEventListener('hide', onHide);\r\n    };\r\n  }, [saveBar, onHide]);\r\n  useEffect(() => {\r\n    if (!saveBar) return;\r\n    return () => {\r\n      saveBar.hide();\r\n    };\r\n  }, [saveBar]);\r\n  return /*#__PURE__*/jsx(\"ui-save-bar\", {\r\n    ...rest,\r\n    ref: saveBar => {\r\n      setSaveBar(saveBar);\r\n      if (forwardedRef) {\r\n        if (typeof forwardedRef === 'function') {\r\n          forwardedRef(saveBar);\r\n        } else {\r\n          forwardedRef.current = saveBar;\r\n        }\r\n      }\r\n    },\r\n    children: children\r\n  });\r\n});\r\nSaveBar.displayName = 'ui-save-bar';\r\n\r\nexport { SaveBar };\r\n", "/**\r\n * This proxy is used to throw a helpful error message when trying to access\r\n * the `shopify` global in a server environment.\r\n */\r\nconst serverProxy = new Proxy({}, {\r\n  get(_, prop) {\r\n    throw Error(`shopify.${String(prop)} can't be used in a server environment. You likely need to move this code into an Effect.`);\r\n  }\r\n});\r\n\r\n/**\r\n *\r\n * This hook returns the `shopify` global variable to use\r\n * App Bridge APIs such as `toast` and `resourcePicker`.\r\n *\r\n * @see {@link https://shopify.dev/docs/api/app-bridge-library/react-hooks/useappbridge}\r\n *\r\n * @example\r\n * ```jsx\r\n * import {useAppBridge} from '@shopify/app-bridge-react';\r\n * function GenerateBlogPostButton() {\r\n *   const shopify = useAppBridge();\r\n *\r\n *   function generateBlogPost() {\r\n *     // Handle generating\r\n *     shopify.toast.show('Blog post template generated');\r\n *   }\r\n *\r\n *   return <button onClick={generateBlogPost}>Generate Blog Post</button>;\r\n * }\r\n * ```\r\n *\r\n * @returns `shopify` variable or a Proxy that throws when incorrectly accessed when not in a browser context\r\n */\r\nfunction useAppBridge() {\r\n  if (typeof window === 'undefined') {\r\n    return serverProxy;\r\n  }\r\n  if (!window.shopify) {\r\n    throw Error('The shopify global is not defined. This likely means the App Bridge script tag was not added correctly to this page');\r\n  }\r\n  return window.shopify;\r\n}\r\n\r\nexport { useAppBridge };\r\n"],
  "mappings": "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",
  "names": ["ReactDOM", "modal", "import_react", "import_jsx_runtime", "saveBar"]
}
